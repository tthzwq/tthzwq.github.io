import{_ as s,o as a,c as o,Q as l}from"./chunks/framework.36bc40e2.js";const n="/assets/git.a12aac19.png",p="/assets/git_directory.22eba406.png",t="/assets/git_flow.2923b25d.png",h=JSON.parse('{"title":"Git","description":"","frontmatter":{},"headers":[],"relativePath":"others/git.md","filePath":"others/git.md","lastUpdated":1706427897000}'),e={name:"others/git.md"},c=l('<h1 id="git" tabindex="-1">Git <a class="header-anchor" href="#git" aria-label="Permalink to &quot;Git&quot;">​</a></h1><h2 id="git-工作区域" tabindex="-1">Git 工作区域 <a class="header-anchor" href="#git-工作区域" aria-label="Permalink to &quot;Git 工作区域&quot;">​</a></h2><p><img src="'+n+'" alt="git"></p><ul><li>Workspace：工作区。可见的项目文件</li><li>Index / Stage：暂存区。项目目录下<code>.git/index</code>文件, 暂存区会记录 <code>git add</code> 添加文件的相关信息(文件名、大小、timestamp...)，不保存文件实体, 通过 id 指向每个文件实体。可以使用 git status 查看暂存区的状态。暂存区标记了当前工作区中，哪些内容是被 git 管理的。</li><li>Repository：仓库区（或本地仓库）。就是安全存放数据的位置，这里面有你提交到所有版本的数据。</li><li>Remote：远程仓库，托管代码的服务器。</li></ul><p>本地区域的一些概念</p><p><img src="'+p+'" alt="git directory"></p><ul><li>Directory：使用 Git 管理的一个目录，也就是一个仓库，包含我们的工作空间和 Git 的管理空间。</li><li>WorkSpace：需要通过 Git 进行版本控制的目录和文件，这些目录和文件组成了工作空间。</li><li>.git：存放 Git 管理信息的目录，初始化仓库(<code>git init</code> 命令)的时候自动创建。</li><li>Index/Stage：暂存区，或者叫待提交更新区，在提交进入 repo 之前，我们可以把所有的更新放在暂存区。</li><li>Local Repo：本地仓库，一个存放在本地的版本库；HEAD 会指示当前的开发分支（branch）。</li><li>Stash：隐藏，是一个工作状态保存栈，用于保存/恢复 WorkSpace 中的临时状态。</li></ul><h2 id="git-工作流程" tabindex="-1">Git 工作流程 <a class="header-anchor" href="#git-工作流程" aria-label="Permalink to &quot;Git 工作流程&quot;">​</a></h2><p><img src="'+t+`" alt="git flow"></p><h2 id="git-常用命令" tabindex="-1">Git 常用命令 <a class="header-anchor" href="#git-常用命令" aria-label="Permalink to &quot;Git 常用命令&quot;">​</a></h2><h3 id="git-add-添加文件内容到暂存区" tabindex="-1">git-add - 添加文件内容到暂存区 <a class="header-anchor" href="#git-add-添加文件内容到暂存区" aria-label="Permalink to &quot;git-add - 添加文件内容到暂存区&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> [--verbose </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">-v]</span><span style="color:#E1E4E8;"> [--dry-run </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">-n]</span><span style="color:#E1E4E8;"> [--force </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">-f]</span><span style="color:#E1E4E8;"> [--interactive </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">-i]</span><span style="color:#E1E4E8;"> [--patch </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">-p]</span></span>
<span class="line"><span style="color:#E1E4E8;">	  [--edit </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-e</span><span style="color:#E1E4E8;">] [--[no-]all </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> --[no-]ignore-removal </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> [--update </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-u</span><span style="color:#E1E4E8;">]] [--sparse]</span></span>
<span class="line"><span style="color:#E1E4E8;">	  [--intent-to-add </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-N</span><span style="color:#E1E4E8;">] [--refresh] [--ignore-errors] [--ignore-missing] [--renormalize]</span></span>
<span class="line"><span style="color:#E1E4E8;">	  [--chmod</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">(+</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">-)x] [--pathspec-from-file</span><span style="color:#F97583;">=&lt;</span><span style="color:#E1E4E8;">file</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> [--pathspec-file-nul]]</span></span>
<span class="line"><span style="color:#E1E4E8;">	  [--] [</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">pathspec</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">…​]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> [--verbose </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">-v]</span><span style="color:#24292E;"> [--dry-run </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">-n]</span><span style="color:#24292E;"> [--force </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">-f]</span><span style="color:#24292E;"> [--interactive </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">-i]</span><span style="color:#24292E;"> [--patch </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">-p]</span></span>
<span class="line"><span style="color:#24292E;">	  [--edit </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-e</span><span style="color:#24292E;">] [--[no-]all </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> --[no-]ignore-removal </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> [--update </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-u</span><span style="color:#24292E;">]] [--sparse]</span></span>
<span class="line"><span style="color:#24292E;">	  [--intent-to-add </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-N</span><span style="color:#24292E;">] [--refresh] [--ignore-errors] [--ignore-missing] [--renormalize]</span></span>
<span class="line"><span style="color:#24292E;">	  [--chmod</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(+</span><span style="color:#D73A49;">|</span><span style="color:#24292E;">-)x] [--pathspec-from-file</span><span style="color:#D73A49;">=&lt;</span><span style="color:#24292E;">file</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> [--pathspec-file-nul]]</span></span>
<span class="line"><span style="color:#24292E;">	  [--] [</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">pathspec</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">…​]</span></span></code></pre></div><ul><li><p><code>&lt;pathspec&gt;…</code> 要从中添加内容的文件。Fileglobs（例如 <code>*.c</code>）可以用来添加所有匹配的文件。此外，还可以提供一个前导目录名（例如 <code>dir</code> 来添加 <code>dir/file1</code> 和 <code>dir/file2</code>）</p></li><li><p><code>-f | --force</code> 允许添加已被忽略的文件</p></li></ul><h3 id="git-commit-记录对存储库的更改" tabindex="-1">git-commit - 记录对存储库的更改 <a class="header-anchor" href="#git-commit-记录对存储库的更改" aria-label="Permalink to &quot;git-commit - 记录对存储库的更改&quot;">​</a></h3><p>创建一个新的提交，包含索引的当前内容和描述变化的给定日志信息。新的提交是 HEAD 的直接子节点，通常是当前分支的顶端，分支会被更新以指向它（除非工作树上没有分支，在这种情况下 HEAD 会被 &quot;detached&quot;）。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commit</span><span style="color:#E1E4E8;"> [-a </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">--interactive</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">--patch]</span><span style="color:#E1E4E8;"> [-s] [-v] [-u</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">mode</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">] [--amend]</span></span>
<span class="line"><span style="color:#E1E4E8;">	   [--dry-run] [(-c </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> -C </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> --squash) </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">commit</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> --fixup [(amend</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">reword):]</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">commit</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">)]</span></span>
<span class="line"><span style="color:#E1E4E8;">	   [-F </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">file</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> -m </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">msg</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">] [--reset-author] [--allow-empty]</span></span>
<span class="line"><span style="color:#E1E4E8;">	   [--allow-empty-message] [--no-verify] [-e] [--author</span><span style="color:#F97583;">=&lt;</span><span style="color:#E1E4E8;">author</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">	   [--date</span><span style="color:#F97583;">=&lt;</span><span style="color:#E1E4E8;">date</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">] [--cleanup</span><span style="color:#F97583;">=&lt;</span><span style="color:#E1E4E8;">mode</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">] [--[no-]status]</span></span>
<span class="line"><span style="color:#E1E4E8;">	   [-i </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-o</span><span style="color:#E1E4E8;">] [--pathspec-from-file</span><span style="color:#F97583;">=&lt;</span><span style="color:#E1E4E8;">file</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> [--pathspec-file-nul]]</span></span>
<span class="line"><span style="color:#E1E4E8;">	   [(--trailer </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">token</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">[(</span><span style="color:#F97583;">=|</span><span style="color:#E1E4E8;">:)</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">value</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">])…​] [-S[</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">keyid</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">]]</span></span>
<span class="line"><span style="color:#E1E4E8;">	   [--] [</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">pathspec</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">…​]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commit</span><span style="color:#24292E;"> [-a </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">--interactive</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">--patch]</span><span style="color:#24292E;"> [-s] [-v] [-u</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">mode</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">] [--amend]</span></span>
<span class="line"><span style="color:#24292E;">	   [--dry-run] [(-c </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> -C </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> --squash) </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">commit</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> --fixup [(amend</span><span style="color:#D73A49;">|</span><span style="color:#24292E;">reword):]</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">commit</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">)]</span></span>
<span class="line"><span style="color:#24292E;">	   [-F </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">file</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> -m </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">msg</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">] [--reset-author] [--allow-empty]</span></span>
<span class="line"><span style="color:#24292E;">	   [--allow-empty-message] [--no-verify] [-e] [--author</span><span style="color:#D73A49;">=&lt;</span><span style="color:#24292E;">author</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">	   [--date</span><span style="color:#D73A49;">=&lt;</span><span style="color:#24292E;">date</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">] [--cleanup</span><span style="color:#D73A49;">=&lt;</span><span style="color:#24292E;">mode</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">] [--[no-]status]</span></span>
<span class="line"><span style="color:#24292E;">	   [-i </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-o</span><span style="color:#24292E;">] [--pathspec-from-file</span><span style="color:#D73A49;">=&lt;</span><span style="color:#24292E;">file</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> [--pathspec-file-nul]]</span></span>
<span class="line"><span style="color:#24292E;">	   [(--trailer </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">token</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">[(</span><span style="color:#D73A49;">=|</span><span style="color:#24292E;">:)</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">value</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">])…​] [-S[</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">keyid</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">]]</span></span>
<span class="line"><span style="color:#24292E;">	   [--] [</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">pathspec</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">…​]</span></span></code></pre></div><ul><li><p><code>-a | --all</code> 告诉命令自动暂存已修改和删除的文件，但未告知 Git 的新文件不受影响。</p></li><li><p><code>--interactive</code> or <code>--patch</code> &quot;交互式模式&quot; 逐一决定哪些文件或块应该成为提交的一部分，而不是暂存区中的内容。</p></li><li><p><code>-c &lt;commit&gt;</code> | <code>--reedit-message=&lt;commit&gt;</code> 取一个现有的提交对象，并在创建提交时重新使用日志信息和作者信息（包括时间戳）。</p></li><li><p><code>-F &lt;file&gt;</code> | <code>--file=&lt;file&gt;</code> 从给定文件中获取内容作为提交信息。</p></li><li><p><code>--amend</code> 通过创建一个新的提交来替换当前分支的顶端。</p></li></ul><p>记录的树像往常一样准备（包括<code>-i</code>和<code>-o</code>选项和显式 pathspec 的效果），当命令行没有通过<code>-m</code>、<code>-F</code>、<code>-c</code>等选项指定其他信息时，原始提交的信息会被用作起点，而不是空信息。 新的提交与当前的提交具有相同的父辈和作者（<code>--reset-author</code>选项可以反驳）。</p><p>这等价于:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">reset</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--soft</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">HEAD^</span></span>
<span class="line"><span style="color:#79B8FF;">...</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">do</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">something</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">come</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">up</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">with</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">the</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">right</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tree</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">...</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-c</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ORIG_HEAD</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">reset</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--soft</span><span style="color:#24292E;"> </span><span style="color:#032F62;">HEAD^</span></span>
<span class="line"><span style="color:#005CC5;">...</span><span style="color:#24292E;"> </span><span style="color:#032F62;">do</span><span style="color:#24292E;"> </span><span style="color:#032F62;">something</span><span style="color:#24292E;"> </span><span style="color:#032F62;">else</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">come</span><span style="color:#24292E;"> </span><span style="color:#032F62;">up</span><span style="color:#24292E;"> </span><span style="color:#032F62;">with</span><span style="color:#24292E;"> </span><span style="color:#032F62;">the</span><span style="color:#24292E;"> </span><span style="color:#032F62;">right</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tree</span><span style="color:#24292E;"> </span><span style="color:#032F62;">...</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-c</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ORIG_HEAD</span></span></code></pre></div><p>但可以用来修改合并提交。</p><p>如果你修改了一个已经发布的提交，你应该明白重写历史的意义。</p><ul><li><code>--fixup=[(amend|reword):]&lt;commit&gt;</code></li></ul><p>创建一个新的提交，在使用 git rebase --autosquash 时，&quot;修复&quot;<code>&lt;commit&gt;</code>。普通的<code>--fixup=&lt;commit&gt;</code>会创建一个 &quot;fixup!&quot;的提交，改变<code>&lt;commit&gt;</code>的内容，但不改变其日志信息。<code>--fixup=amend:&lt;commit&gt;</code>类似，但会创建一个 &quot;修正！&quot;的提交，同时用 &quot;修正！&quot;的提交的日志信息替换<code>&lt;commit&gt;</code>的日志信息。 <code>--fixup=reword:&lt;commit&gt;</code>创建一个 &quot;修正！&quot;提交，用自己的日志信息替换<code>&lt;commit&gt;</code>的日志信息，但不对<code>&lt;commit&gt;</code>的内容做任何修改。</p><p>由普通的<code>--fixup=&lt;commit&gt;</code>创建的提交，其主题由 &quot;fixup!&quot;和<code>&lt;commit&gt;</code>的主题行组成，并被<code>git rebase --autosquash</code>特别识别。<code>-m</code>选项可以用来补充创建提交的日志信息，但一旦 &quot;fixup!&quot;提交被<code>git rebase --autosquash</code>压入<code>&lt;commit&gt;</code>，额外的注释就会被扔掉。</p><p>由<code>--fixup=amend:&lt;commit&gt;</code>创建的提交与此类似，但其主题前缀为 &quot;amend!&quot;。<code>&lt;commit&gt;</code>的日志信息会被复制到 &quot;amend!&quot;提交的日志信息中，并在编辑器中打开，以便对其进行修改。当<code>git rebase --autosquash</code>将 &quot;amend!&quot;提交压入<code>&lt;commit&gt;</code>时，<code>&lt;commit&gt;</code>的日志信息会被 &quot;amend!&quot;提交的精炼日志信息所取代。如果 &quot;修正！&quot;提交的日志信息为空，则是一个错误，除非指定<code>--allow-empty-message</code>。</p><p><code>--fixup=reword:&lt;commit&gt;</code>是<code>--fixup=amend:&lt;commit&gt;--only</code>的简写。它创建一个只有日志信息的 &quot;修正！&quot;提交（忽略索引中的任何修改）。当被<code>git rebase --autosquash</code>压制时，它会替换<code>&lt;commit&gt;</code>的日志信息而不做任何其他改动。</p><p>当被 <code>git rebase --autosquash</code> 应用时，&quot;fixup!&quot;和 &quot;amend!&quot;提交都不会改变 <code>&lt;commit&gt;</code> 的作者身份。</p>`,28),r=[c];function E(y,i,d,g,m,F){return a(),o("div",null,r)}const f=s(e,[["render",E]]);export{h as __pageData,f as default};
